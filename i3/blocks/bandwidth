#!/bin/bash
# Source: http://www.onlamp.com/pub/a/linux/2000/11/16/LinuxAdmin.html

INSTANCE="${BLOCK_INSTANCE}"
DISPLAY=$(echo "${INSTANCE}" | awk -F ';' '{print $2}')
INSTANCE=$(echo "${INSTANCE}" | awk -F ';' '{print $1}')
STATUS="$(nmcli device status | grep  "^$INSTANCE" | awk '{print $3}')"

if [[ "$STATUS" != "connected" ]]; then
    exit 1
fi

if [[ "${DISPLAY}" = "" ]]; then
  DISPLAY="both"
fi

ONE_KB=1024
ONE_MB=$(echo "${ONE_KB}*1024" | bc -l)
TEN_MB=$(echo "${ONE_MB}*10" | bc -l)
OHD_MB=$(echo "${TEN_MB}*10" | bc -l)

URGENT_VALUE="${ONE_MB}"

PREV_IN=0
PREV_OUT=0

PREV_FILE="/tmp/.bandwidth"

if [[ -f "${PREV_FILE}" ]]; then
  PREV_CONT=$(cat "${PREV_FILE}")
  PREV_IN=$(echo "${PREV_CONT}" | head -n 1)
  PREV_OUT=$(echo "${PREV_CONT}" | tail -n 1)
fi

BANDWIDTH=$(grep "${INSTANCE}" /proc/net/dev | awk -F: '{print  $2}' | awk '{print $1" "$9}')

if [[ "${BANDWIDTH}" = "" ]]; then
  exit
fi

BYTES_IN=$(echo "${BANDWIDTH}" | awk -F ' ' '{print $1}')
BYTES_OUT=$(echo "${BANDWIDTH}" | awk -F ' ' '{print $2}')

function FormatNumber() {
    local NUMBER="${1}"
    if [[ $((NUMBER)) -lt 0 ]]; then
        NUMBER=0
    fi
    if [[ "${NUMBER}" -ge "${OHD_MB}" ]]; then
        echo "$(echo "scale=0;${NUMBER}/${ONE_MB}" | bc -l)M"
    elif [[ "${NUMBER}" -ge "${TEN_MB}" ]]; then
        echo "$(echo "scale=1;${NUMBER}/${ONE_MB}" | bc -l)M"
    elif [[ "${NUMBER}" -ge "${ONE_MB}" ]]; then
        echo "$(echo "scale=2;${NUMBER}/${ONE_MB}" | bc -l)M"
    elif [[ "${NUMBER}" -ge "${ONE_KB}" ]]; then
        echo "$(echo "scale=0;${NUMBER}/${ONE_KB}" | bc -l)K"
    else
        echo "${NUMBER}b"
    fi
}

if [[ "${PREV_IN}" != "" ]] && [[ "${PREV_OUT}" != "" ]]; then
    # Calculate the CPU usage since we last checked.
    DIFF_IN=$(echo "scale=0;${BYTES_IN} - ${PREV_IN}" | bc -l)
    DIFF_OUT=$(echo "scale=0;${BYTES_OUT} - ${PREV_OUT}" | bc -l)
    DIFF_TOTAL=0

    USAGE_IN=$(FormatNumber "${DIFF_IN}")
    USAGE_OUT=$(FormatNumber "${DIFF_OUT}")

    if [[ "${DISPLAY}" = "both" ]]; then
        echo " ${USAGE_IN} ⬇⬆ ${USAGE_OUT}"
        echo "${USAGE_IN}⬇⬆${USAGE_OUT}"
        if [[ $((DIFF_IN)) -gt $((DIFF_OUT)) ]]; then
            echo "#00FF00"
        elif [[ $((DIFF_IN)) -lt $((DIFF_OUT)) ]]; then
            echo "FF0000"
        else
            echo "#FFFFFF"
        fi

        DIFF_TOTAL=$((DIFF_TOTAL+DIFF_IN))
        DIFF_TOTAL=$((DIFF_TOTAL+DIFF_OUT))
    elif [[ "${DISPLAY}" = "in" ]]; then
        printf "%4s\n" "${USAGE_IN}"
        printf "dl-%4s\n" "${USAGE_IN}"
        if [[ $((DIFF_IN)) -gt 0 ]]; then
            echo "#ff0000"
        fi
        echo ""
        DIFF_TOTAL=$((DIFF_TOTAL+DIFF_IN))
    elif [[ "${DISPLAY}" = "out" ]]; then
        printf "%4s\n" "${USAGE_OUT}"
        printf "ul-%4s\n" "${USAGE_OUT}"
        if [[ $((DIFF_OUT)) -gt 0 ]]; then
            echo "#00ff00"
        fi
        echo ""
        DIFF_TOTAL=$((DIFF_TOTAL+DIFF_OUT))
    fi
else
    echo "?"
    echo "?"
    echo ""
fi

# Remember the total and idle CPU times for the next check.
echo "${BYTES_IN}" > "${PREV_FILE}"
echo "${BYTES_OUT}" >> "${PREV_FILE}"

if [[ "${DIFF_TOTAL}" -ge "${URGENT_VALUE}" ]]; then
    exit 33
fi
